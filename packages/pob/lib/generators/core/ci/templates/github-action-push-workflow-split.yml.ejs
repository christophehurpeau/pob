name: Push CI

on: [push]

jobs:
<% if (checks) { -%>
  checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>

      - name: Checks
        run: yarn run checks

<% } -%>
<% if (build) { -%>
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>

      - name: Build
        run: yarn run build

      - name: Check nothing was forgotten before commit
        run: yarn run repository-check-dirty

<% } -%>
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>

      - name: Prettier
        run: yarn run lint:prettier
<% if (typescript) { -%>

      - name: Typescript
        run: yarn run tsc
<% } -%>

      - name: Eslint
        run: yarn run lint:eslint
<% if (testing) { -%>

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>

<% if (codecov) { -%>
      - name: Test
        run: <%= packageManager %> run test
        if: matrix.node-version != 18

      - name: Generate Test Coverage
        run: |
          if [ -z "$CODECOV_TOKEN" ]; then
            echo "Missing env variable CODECOV_TOKEN"
            exit 1
          fi
          <%= packageManager %> run test:coverage:json
        if: matrix.node-version == 18
        env:
          CI: true
          NODE_V8_COVERAGE: coverage/

      - name: Send results to codecov
        uses: codecov/codecov-action@v4
        if: matrix.node-version == 18
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
<% } else { -%>

      - name: Test
        run: <%= packageManager %> run test
<% } -%>
<% } -%>
<% if (e2eTesting) { -%>

  test-e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>

      - name: E2E testing
        run: <%= packageManager %> <%= e2eTesting === '.' ? '.' : `./${e2eTesting}` %> run test:e2e
<% } -%>
<% if (isReleasePleaseEnabled) { -%>
  release:
    runs-on: ubuntu-latest

    needs: [<%= checks ? '"checks", ' : '' -%><%= build ? '"build", ' : '' -%>"lint"<%= testing ? ', "test"' : '' -%>]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: GoogleCloudPlatform/release-please-action@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        id: release
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: node

<% if (publishSinglePackage) { -%>

      # publish:
      - run: npm publish
        if: ${{ github.ref == 'refs/heads/main' && steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
<% } -%>
<% } -%>

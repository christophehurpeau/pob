name: 'Create documentation and deploy to Github pages'
on:
  push:
    branches:
      - main

jobs:
  create-documentation-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

<% if (packageManager === 'yarn') { -%>
      - name: Enable Corepack
        run: corepack enable

<% } -%>
      - uses: actions/setup-node@v6
        with:
          node-version: <%= nodeLatestMajorVersion %>
          check-latest: true

<% if (packageManager === 'yarn') { -%>
      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>
<% } else if (packageManager === 'bun') { -%>
      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        run: bun install --frozen-lockfile
<% } -%>

<% if (typedoc) { -%>
      - name: Run tsc for tsc cache
        run: yarn tsc

      - name: Generate Typedoc
        run: yarn typedoc --tsconfig tsconfig.doc.json
<% } -%>

<% if (testing) { -%>
<% if (testRunner === 'node') { -%>

      - name: Generate Coverage
        run: NODE_V8_COVERAGE=./docs/coverage yarn test:coverage
<% } else {-%>

      - name: Generate Coverage
        run: yarn test:coverage:json<%- testRunner === 'jest' ? " --coverageDirectory=docs/coverage/" : "" %>
<% } -%>
<% } -%>

      - name: Create nojekyll
        run: touch docs/.nojekyll

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

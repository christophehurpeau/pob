name: Push CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [<% if (!onlyLatestLTS) { -%>20.x, <% } -%>22.14]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

<% if (packageManager === 'yarn') { -%>
      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>
<% } else if (packageManager === 'npm') { -%>
      - name: Install Dependencies
        run: npm ci
<% } else if (packageManager === 'bun') { -%>
      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        run: bun install --frozen-lockfile
<% } -%>

<% if (checks) { -%>
      - name: Checks
        run: <%= packageManager %> run checks
        if: startsWith(matrix.node-version, '22.')

<% } -%>
<% if (build) { -%>
      - name: Build
        run: yarn run build
        if: startsWith(matrix.node-version, '22.')

<% } -%>
      - name: Prettier
        run: <%= packageManager %> run lint:prettier
        if: startsWith(matrix.node-version, '22.')
<% if (typescript) { -%>

      - name: Typescript
        run: yarn run tsc
        if: startsWith(matrix.node-version, '22.')
<% } -%>

      - name: Eslint
        run: <%= packageManager %> run lint:eslint
        if: startsWith(matrix.node-version, '22.')
<% if (true) { -%>

      - name: Check nothing was forgotten before commit
        if: startsWith(matrix.node-version, '22.')
        run: <%= packageManager === 'npm' ? 'npx' : 'yarn run' %> repository-check-dirty
<% } -%>
<% if (codecov) { -%>

      - name: Generate Test Coverage
        run: <%= packageManager %> run test:coverage:json
        if: startsWith(matrix.node-version, '22.')
        env:
          CI: true

      - name: Send results to codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
        if: startsWith(matrix.node-version, '22.') && github.actor != 'dependabot[bot]'
<% } else if (testing) { -%>

      - name: Test
        run: <%= packageManager %> run test
        env:
          CI: true
<% } -%>
<% if (e2eTesting) { -%>

      - name: E2E testing
        run: <%= packageManager %> <%= e2eTesting %> run test:e2e
<% } -%>
<% if (isReleasePleaseEnabled) { -%>

      - uses: GoogleCloudPlatform/release-please-action@v3
        if: ${{ startsWith(matrix.node-version, '22.') && github.ref == 'refs/heads/main' }}
        id: release
        with:
          token: ${{ secrets.GH_TOKEN }}
          release-type: node

<% if (publishSinglePackage) { -%>

      # publish:
      - run: npm publish
        if: ${{ startsWith(matrix.node-version, '22.') && github.ref == 'refs/heads/main' && steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
<% } -%>
<% } -%>

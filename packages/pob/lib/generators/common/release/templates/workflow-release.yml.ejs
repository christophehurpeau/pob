name: Release
on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Dry run"
        required: true
        type: boolean
        default: false
      allow-no-tags:
        description: "Allow no tags"
        required: false
        type: boolean
        default: false
<% if (enableYarnVersion && isMonorepo && isMonorepoIndependent) { -%>
      bump-dependents-highest-as:
        description: "Bump dependents highest as"
        required: false
        type: choice
        options:
          - major
          - minor
          - patch
        default: "major"
<% } -%>

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          fetch-tags: true
<% if (packageManager === 'yarn') { -%>

      - name: Enable Corepack
        run: corepack enable
<% } -%>

      - uses: actions/setup-node@v5
        with:
          node-version: <%= nodeLatestMajorVersion %>
          check-latest: true

      - name: Check git tags
        if: github.ref == 'refs/heads/main' && !inputs.allow-no-tags
        run: |
          tags=$(git tag)
          if [ -z "$tags" ]; then
            echo "No git tags found"
            exit 1
          fi
<% if (packageManager === 'yarn') { -%>

      - name: Install Dependencies
<% if (disableYarnGitCache) { -%>
        run: yarn install --immutable
<% } else { -%>
        run: yarn install --immutable --immutable-cache
<% } -%>
<% } else if (packageManager === 'bun') { -%>
      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install Dependencies
        run: bun install --frozen-lockfile
<% } -%>

      - name: New version (dry run)
        if: github.ref == 'refs/heads/main' && inputs.dry-run
<% if (enableYarnVersion) { -%>
        run: yarn yarn-version version --dry-run<% if (isMonorepo && isMonorepoIndependent) { %> --bump-dependents-highest-as=${{ inputs.bump-dependents-highest-as }}<% } %>
<% } else { -%>
        run: yarn lerna version --yes --no-push --exact --conventional-commits --conventional-graduate --changelog-preset conventional-changelog-conventionalcommits --no-git-tag-version --loglevel=verbose
<% } -%>
      - name: Configure Git user
        if: github.ref == 'refs/heads/main' && !inputs.dry-run
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: New version
        if: github.ref == 'refs/heads/main' && !inputs.dry-run
        run: |
<% if (enableYarnVersion) { -%>
          yarn yarn-version version --create-release=github <% if (isMonorepo && isMonorepoIndependent) { %> --bump-dependents-highest-as=${{ inputs.bump-dependents-highest-as }}<% } %> -m 'chore: release <%- isMonorepoIndependent ? '' : '%v ' %>[skip ci]<%- isMonorepoIndependent ? '\\n\\n%t' : '' %>'
<% } else { -%>
          yarn lerna version --yes --push --exact --conventional-commits --conventional-graduate --changelog-preset conventional-changelog-conventionalcommits --create-release=github -m 'chore: release [skip ci]'
<% } -%>
        env:
          HUSKY: 0
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          YARN_ENABLE_IMMUTABLE_INSTALLS: false
<% if (enablePublish) { -%>

      - name: Publish to npm
        run: |
          if [ -z "$NODE_AUTH_TOKEN" ]; then
            echo "Missing env variable NODE_AUTH_TOKEN"
            exit 1
          fi
          echo >> ./.yarnrc.yml
          echo "npmAuthToken: $NODE_AUTH_TOKEN" >> ./.yarnrc.yml
<% if (isMonorepo) { -%>
          yarn workspaces foreach --all --parallel --no-private npm publish --tolerate-republish
<% } else { -%>
          yarn npm publish
<% } -%>
        if: github.ref == 'refs/heads/main' && !inputs.dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
<% } -%>

{"version":3,"file":"index-node20.mjs","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\n\nimport type {\n  AllDependencies as DependencyType,\n  Descriptor,\n  Project,\n  Workspace,\n} from \"@yarnpkg/core\";\nimport { Manifest, miscUtils, structUtils } from \"@yarnpkg/core\";\n\nexport const getWorkspaceName = (workspace: Workspace): string => {\n  return workspace.manifest.name\n    ? structUtils.stringifyIdent(workspace.manifest.name)\n    : workspace.computeCandidateName();\n};\n\ntype WorkspacesDependenciesMap = Map<\n  Workspace,\n  [Workspace, DependencyType, Descriptor][]\n>;\n\nexport const buildDependentsMaps = (\n  project: Project,\n): WorkspacesDependenciesMap => {\n  const dependentsMap: WorkspacesDependenciesMap = new Map<\n    Workspace,\n    [Workspace, DependencyType, Descriptor][]\n  >();\n\n  // Note that we need to do this before applying the new versions,\n  // otherwise the `findWorkspacesByDescriptor` calls won't be able to\n  // resolve the workspaces anymore (because the workspace versions will\n  // have changed and won't match the outdated dependencies).\n\n  for (const dependent of project.workspaces) {\n    for (const set of Manifest.allDependencies) {\n      for (const descriptor of dependent.manifest[set].values()) {\n        const workspace = project.tryWorkspaceByDescriptor(descriptor);\n        if (workspace === null) {\n          continue;\n        }\n\n        const dependents = miscUtils.getArrayWithDefault(\n          dependentsMap,\n          workspace,\n        );\n        dependents.push([dependent, set, descriptor]);\n      }\n    }\n  }\n\n  return dependentsMap;\n};\n\nexport const buildDependenciesMaps = (\n  project: Project,\n): WorkspacesDependenciesMap => {\n  const dependenciesMap: WorkspacesDependenciesMap = new Map<\n    Workspace,\n    [Workspace, DependencyType, Descriptor][]\n  >();\n\n  // Note that we need to do this before applying the new versions,\n  // otherwise the `findWorkspacesByDescriptor` calls won't be able to\n  // resolve the workspaces anymore (because the workspace versions will\n  // have changed and won't match the outdated dependencies).\n\n  for (const dependent of project.workspaces) {\n    for (const set of Manifest.allDependencies) {\n      for (const descriptor of dependent.manifest[set].values()) {\n        const workspace = project.tryWorkspaceByDescriptor(descriptor);\n        if (workspace === null) {\n          continue;\n        }\n\n        const dependencies = miscUtils.getArrayWithDefault(\n          dependenciesMap,\n          dependent,\n        );\n        dependencies.push([workspace, set, descriptor]);\n      }\n    }\n  }\n\n  return dependenciesMap;\n};\n\nexport const buildTopologicalOrderBatches = (\n  project: Project,\n  dependenciesMap: WorkspacesDependenciesMap,\n): Workspace[][] => {\n  const batches: Workspace[][] = [];\n\n  const added = new Set<Workspace>();\n  const toAdd = new Set<Workspace>(project.workspaces);\n\n  while (toAdd.size > 0) {\n    const batch = new Set<Workspace>();\n    for (const workspace of toAdd) {\n      // make sure top level workspace is always in the last batch\n      if (workspace === project.topLevelWorkspace && toAdd.size > 1) {\n        continue;\n      }\n\n      const dependencies = dependenciesMap.get(workspace);\n      if (!dependencies || dependencies.every((w) => added.has(w[0]))) {\n        batch.add(workspace);\n      }\n    }\n\n    for (const workspace of batch) {\n      added.add(workspace);\n      toAdd.delete(workspace);\n    }\n\n    if (batch.size === 0) {\n      throw new Error(\"Circular dependency detected\");\n    }\n    batches.push([...batch]);\n  }\n\n  return batches;\n};\n"],"names":["getWorkspaceName","workspace","manifest","name","structUtils","stringifyIdent","computeCandidateName","buildDependentsMaps","project","dependentsMap","Map","dependent","workspaces","set","Manifest","allDependencies","descriptor","values","tryWorkspaceByDescriptor","dependents","miscUtils","getArrayWithDefault","push","buildDependenciesMaps","dependenciesMap","dependencies","buildTopologicalOrderBatches","batches","added","Set","toAdd","size","batch","topLevelWorkspace","get","every","w","has","add","delete","Error"],"mappings":"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"}
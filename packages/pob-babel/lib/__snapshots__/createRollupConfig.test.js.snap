// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fixtures basic 0 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }
}
class TestWithPrivate extends Test {
  #args;
  constructor(...args) {
    this.#args = args;
  }
}

const sayHello = () => {
  console.log("hello node");
};

sayHello();
if (process.env.NODE_ENV !== "production") {
  console.log("__DEV__ is true");
}
if (!(process.env.NODE_ENV !== "production")) {
  console.log("__DEV__ is false");
}
console.log(\`the answer is \${42}\`);
class Test2 extends TestWithPrivate {
  constructor(...args) {
    super(...args);
  }
}
const t = new Test2(1, 2, 3);
const spreadTest = {
  ...{
    test: "spread"
  }
};
const foo = t.foo ?? "default";
const operator = spreadTest?.toString();

export { foo, operator, spreadTest, t };
"
`;

exports[`fixtures basic 1 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }
}
class TestWithPrivate extends Test {
  #args;
  constructor(...args) {
    this.#args = args;
  }
}

const sayHello = () => {
  console.log("hello browser");
};

sayHello();
if (process.env.NODE_ENV !== "production") {
  console.log("__DEV__ is true");
}
if (!(process.env.NODE_ENV !== "production")) {
  console.log("__DEV__ is false");
}
console.log(\`the answer is \${42}\`);
class Test2 extends TestWithPrivate {
  constructor(...args) {
    super(...args);
  }
}
const t = new Test2(1, 2, 3);
const spreadTest = {
  ...{
    test: "spread"
  }
};
const foo = t.foo ?? "default";
const operator = spreadTest?.toString();

export { foo, operator, spreadTest, t };
"
`;

exports[`fixtures basic 2 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }
}
class TestWithPrivate extends Test {
  #args;
  constructor(...args) {
    this.#args = args;
  }
}

const sayHello = () => {
  console.log("hello browser");
};

sayHello();
if (process.env.NODE_ENV !== "production") {
  console.log("__DEV__ is true");
}
if (!(process.env.NODE_ENV !== "production")) {
  console.log("__DEV__ is false");
}
console.log(\`the answer is \${42}\`);
class Test2 extends TestWithPrivate {
  constructor(...args) {
    super(...args);
  }
}
const t = new Test2(1, 2, 3);
const spreadTest = {
  ...{
    test: "spread"
  }
};
const foo = t.foo ?? "default";
const operator = spreadTest?.toString();

export { foo, operator, spreadTest, t };
"
`;

exports[`fixtures react 0 1`] = `
"import { render } from 'react-dom';
import { jsx } from 'react/jsx-runtime';

const Component = () => /*#__PURE__*/jsx("div", {});
render( /*#__PURE__*/jsx(Component, {}), document.getElementById("react-container"));
"
`;

exports[`fixtures react 1 1`] = `
"import { render } from 'react-dom';
import './styles.css';
import { jsx } from 'react/jsx-runtime';

const Component = () => /*#__PURE__*/jsx("div", {});
render( /*#__PURE__*/jsx(Component, {}), document.getElementById("react-container"));
"
`;

exports[`fixtures ts 0 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }
}

console.log(\`the answer is \${42}\`);
class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }
}
class Foo {}
const t = new Test2(1, 2, 3);
t.foo = new Foo();

export { t as default };
"
`;

exports[`fixtures ts 1 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }
}

console.log(\`the answer is \${42}\`);
class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }
}
class Foo {}
const t = new Test2(1, 2, 3);
t.foo = new Foo();

export { t as default };
"
`;

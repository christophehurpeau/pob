// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fixtures basic 0 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }

}

console.log(\`the answer is \${42}\`);

class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }

}

const t = new Test2(1, 2, 3);
const spreadTest = { ...{
    test: 'spread'
  }
};
const operator = spreadTest === null || spreadTest === void 0 ? void 0 : spreadTest.toString();

export { operator, spreadTest, t };
"
`;

exports[`fixtures basic 1 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }

}

console.log(\`the answer is \${42}\`);

class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }

}

const t = new Test2(1, 2, 3);
const spreadTest = { ...{
    test: 'spread'
  }
};
const operator = spreadTest === null || spreadTest === void 0 ? void 0 : spreadTest.toString();

export { operator, spreadTest, t };
"
`;

exports[`fixtures basic 2 1`] = `
"import _extends from '@babel/runtime/helpers/esm/extends';
import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';

var Test = function Test() {
  var _len, args, _key;

  for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  this.args = args;
};

console.log(\\"the answer is 42\\");

var Test2 = /*#__PURE__*/function (_Test) {
  _inheritsLoose(Test2, _Test);

  function Test2() {
    var _len, args, _key;

    for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _Test.call.apply(_Test, [this].concat(args)) || this;
  }

  return Test2;
}(Test);

var t = new Test2(1, 2, 3);
var spreadTest = _extends({}, {
  test: 'spread'
});
var operator = spreadTest == null ? void 0 : spreadTest.toString();

export { operator, spreadTest, t };
"
`;

exports[`fixtures basic 3 1`] = `
"import _extends from '@babel/runtime/helpers/esm/extends';
import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';

var Test = function Test() {
  var _len, args, _key;

  for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  this.args = args;
};

console.log(\\"the answer is 42\\");

var Test2 = /*#__PURE__*/function (_Test) {
  _inheritsLoose(Test2, _Test);

  function Test2() {
    var _len, args, _key;

    for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _Test.call.apply(_Test, [this].concat(args)) || this;
  }

  return Test2;
}(Test);

var t = new Test2(1, 2, 3);
var spreadTest = _extends({}, {
  test: 'spread'
});
var operator = spreadTest == null ? void 0 : spreadTest.toString();

export { operator, spreadTest, t };
"
`;

exports[`fixtures basic 4 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }

}

console.log(\`the answer is \${42}\`);

class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }

}

const t = new Test2(1, 2, 3);
const spreadTest = { ...{
    test: 'spread'
  }
};
const operator = spreadTest === null || spreadTest === void 0 ? void 0 : spreadTest.toString();

export { operator, spreadTest, t };
"
`;

exports[`fixtures basic 5 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }

}

console.log(\`the answer is \${42}\`);

class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }

}

const t = new Test2(1, 2, 3);
const spreadTest = { ...{
    test: 'spread'
  }
};
const operator = spreadTest === null || spreadTest === void 0 ? void 0 : spreadTest.toString();

export { operator, spreadTest, t };
"
`;

exports[`fixtures react 0 1`] = `
"import React from 'react';
import { render } from 'react-dom';

const Component = () => /*#__PURE__*/React.createElement(\\"div\\", null);

render( /*#__PURE__*/React.createElement(Component, null), document.getElementById('react-container'));
"
`;

exports[`fixtures react 1 1`] = `
"import React from 'react';
import { render } from 'react-dom';

const Component = () => /*#__PURE__*/React.createElement(\\"div\\", null);

render( /*#__PURE__*/React.createElement(Component, null), document.getElementById('react-container'));
"
`;

exports[`fixtures react 2 1`] = `
"import React from 'react';
import { render } from 'react-dom';
import './styles.css';

const Component = () => /*#__PURE__*/React.createElement(\\"div\\", null);

render( /*#__PURE__*/React.createElement(Component, null), document.getElementById('react-container'));
"
`;

exports[`fixtures react 3 1`] = `
"import React from 'react';
import { render } from 'react-dom';
import './styles.css';

const Component = () => /*#__PURE__*/React.createElement(\\"div\\", null);

render( /*#__PURE__*/React.createElement(Component, null), document.getElementById('react-container'));
"
`;

exports[`fixtures ts 0 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }

}

console.log(\`the answer is \${42}\`);

class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }

}

const t = new Test2(1, 2, 3);

export { t as default };
"
`;

exports[`fixtures ts 1 1`] = `
"class Test {
  constructor(...args) {
    this.args = args;
  }

}

console.log(\`the answer is \${42}\`);

class Test2 extends Test {
  constructor(...args) {
    super(...args);
  }

}

const t = new Test2(1, 2, 3);

export { t as default };
"
`;

exports[`fixtures ts 2 1`] = `
"import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';

var Test = function Test() {
  var _len, args, _key;

  for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  this.args = args;
};

console.log(\\"the answer is 42\\");

var Test2 = /*#__PURE__*/function (_Test) {
  _inheritsLoose(Test2, _Test);

  function Test2() {
    var _len, args, _key;

    for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _Test.call.apply(_Test, [this].concat(args)) || this;
  }

  return Test2;
}(Test);

var t = new Test2(1, 2, 3);

export { t as default };
"
`;

exports[`fixtures ts 3 1`] = `
"import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';

var Test = function Test() {
  var _len, args, _key;

  for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  this.args = args;
};

console.log(\\"the answer is 42\\");

var Test2 = /*#__PURE__*/function (_Test) {
  _inheritsLoose(Test2, _Test);

  function Test2() {
    var _len, args, _key;

    for (_len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _Test.call.apply(_Test, [this].concat(args)) || this;
  }

  return Test2;
}(Test);

var t = new Test2(1, 2, 3);

export { t as default };
"
`;
